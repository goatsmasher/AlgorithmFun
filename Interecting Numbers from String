Given a string such as  “1,2,3,4 ; 4,5,6”, where the ; represents the split between the two sides, return in a string with no trailing whitespace or commas the intersecting numbers (numbers that happen on both sides)

function findIntersection(input) {
	const toSplit = input.indexOf(":");
	const [set1, set2] = [input.substr(0, toSplit).split(","), input.substr(toSplit + 1).split(",")];

	const holder = {};
	const result = [];
	for (let i = 0; i < set1.length; i++) {
		if (!holder[set1[i]]) {
			holder[set1[i]] = 1;
		}
		else {
			holder[set1[i]] += 1;
		}
	}
	for (let k = 0; k < set2.length; k++) {
		if (holder[set2[k]] > 0) {
			result.push(set2[k]);
			holder[set2[k]] -= 1;
		}
	}
	console.log(result);
}

findIntersection("1,2,3,4,4,14:4,4,5,6,1");
