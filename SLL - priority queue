//Implement a Priority Queue using a Single Linked List

function Node(val, pq) {
    this.val = val,
        this.pq = pq,
        this.next = null;
}

function SLL() {
    this.head = null;
}



SLL.prototype.enqueue = function (node) {
    if (!this.head) {
        this.head = node;
        return this;
    }
    if (node.pq < this.head.pq) {
        node.next = this.head;
        this.head = node;
        return this;
    }
    var current = this.head;
    while (current.next && current.next.pq <= node.pq) {
        current = current.next;
    }
    if (!current.next) {
        current.next = node;
    }
    else {
        node.next = current.next;
        current.next = node;
    }
    return this;
};
